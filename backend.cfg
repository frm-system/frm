[buildout]
extends =
    base.cfg
develop =
    backend

parts = 
  eggs_install
  backend
  sphinx-doc
  uwsgiconfig
  uwsgi-script
  nginxconfig
  nginx-script
  supervisorconfig
  coverage-script
  redisconfig

eggs = 
  coverage
log-directory = /mnt/logs
pid-directory = /mnt/pids
data-directory= /mnt/data
config-directory = ${buildout:directory}/configs

versions = versions

[backend]
config_name = __FIX_ME__
recipe = zc.recipe.egg:scripts
eggs = 
  fountain_backend
  sphinx
initialization =
    import sys
    from tests.init import init
    if "tests" in sys.argv[0] or "junit" in sys.argv[0]: init()

    import os
    os.environ['CONFIG_FILE'] = os.path.join(r'${buildout:directory}', 'configs', '${:config_name}')
    import view
    application = view.application


[sphinx-doc]
recipe = collective.recipe.sphinxbuilder
build = ${buildout:directory}/backend/docs
source = ${buildout:directory}/backend/docs
eggs = 
  fountain_backend
  sphinx

[eggs_install]
recipe = zc.recipe.egg
eggs = ${buildout:eggs}

[uwsgiconfig]
recipe = collective.recipe.template
input = ${buildout:config-directory}/uwsgi/uwsgi.ini.in
configfile=${buildout:config-directory}/uwsgi/uwsgi.ini
output = ${uwsgiconfig:configfile}
# socket = ${buildout:directory}/var/run/backend_uwsgi.sock
socket = 127.0.0.1:3031
wsgiscript = wsgi
processes = 10
cheaper = 2
disablelogging = false
pidfile=${buildout:pid-directory}/maininstance.pid

[uwsgi-script]
recipe = collective.recipe.template
input = ${buildout:config-directory}/uwsgi/uwsgi.sh.in
output = ${buildout:bin-directory}/uwsgi.sh
mode = 755

[coverage-script]
recipe = collective.recipe.template
input = ${buildout:config-directory}/coverage.sh.in
output = ${buildout:bin-directory}/coverage.sh
mode = 755

[nginxconfig]
recipe = collective.recipe.template
input = ${buildout:config-directory}/nginx/nginx.conf.in
configfile=${buildout:config-directory}/nginx/nginx.conf
output = ${nginxconfig:configfile}
socket = 127.0.0.1:3031

[nginx-script]
recipe = collective.recipe.template
input = ${buildout:config-directory}/nginx/nginx.sh.in
output = ${buildout:bin-directory}/nginx.sh
mode = 755

[supervisorconfig]
recipe = collective.recipe.template
input = ${buildout:config-directory}/supervisord/supervisord.conf.in
output =${buildout:config-directory}/supervisord/supervisord.conf

[redisconfig]
recipe = collective.recipe.template
input = ${buildout:config-directory}/redis/redis.conf.in
output= ${buildout:config-directory}/redis/redis.conf
log-file = ${buildout:log-directory}/redis.log
data-directory = ${buildout:data-directory}
data-file= ${:data-directory}/redis.rdb

[versions]

